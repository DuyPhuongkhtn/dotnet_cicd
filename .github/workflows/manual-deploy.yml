name: Manual Branch Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  REGISTRY: ghcr.io
  GATEWAY_IMAGE_NAME: ${{ github.repository }}/gateway-api
  EMAIL_IMAGE_NAME: ${{ github.repository }}/email-service
  AUTH_IMAGE_NAME: ${{ github.repository }}/auth-service

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          # Build and push Gateway API
          docker build -t ${{ env.REGISTRY }}/${{ env.GATEWAY_IMAGE_NAME }}:${{ github.sha }}-${{ github.ref_name }} ./GatewayAPI
          docker push ${{ env.REGISTRY }}/${{ env.GATEWAY_IMAGE_NAME }}:${{ github.sha }}-${{ github.ref_name }}

          # Build and push Email Service
          docker build -t ${{ env.REGISTRY }}/${{ env.EMAIL_IMAGE_NAME }}:${{ github.sha }}-${{ github.ref_name }} ./EmailService
          docker push ${{ env.REGISTRY }}/${{ env.EMAIL_IMAGE_NAME }}:${{ github.sha }}-${{ github.ref_name }}

          # Build and push Auth Service
          docker build -t ${{ env.REGISTRY }}/${{ env.AUTH_IMAGE_NAME }}:${{ github.sha }}-${{ github.ref_name }} ./AuthenticationService
          docker push ${{ env.REGISTRY }}/${{ env.AUTH_IMAGE_NAME }}:${{ github.sha }}-${{ github.ref_name }}

      - name: Deploy to Digital Ocean
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            # Create deployment directory if it doesn't exist
            mkdir -p /deployments/${{ github.ref_name }}
            cd /deployments/${{ github.ref_name }}

            # Create or update docker-compose.yml
            cat > docker-compose.yml << EOL
            version: '3.8'

            services:
              gateway-api:
                image: ${{ env.REGISTRY }}/${{ env.GATEWAY_IMAGE_NAME }}:${{ github.sha }}-${{ github.ref_name }}
                ports:
                  - "5000:80"
                environment:
                  - ASPNETCORE_ENVIRONMENT=${{ inputs.environment }}
                networks:
                  - microservices-network

              email-service:
                image: ${{ env.REGISTRY }}/${{ env.EMAIL_IMAGE_NAME }}:${{ github.sha }}-${{ github.ref_name }}
                expose:
                  - "80"
                environment:
                  - ASPNETCORE_ENVIRONMENT=${{ inputs.environment }}
                networks:
                  - microservices-network

              auth-service:
                image: ${{ env.REGISTRY }}/${{ env.AUTH_IMAGE_NAME }}:${{ github.sha }}-${{ github.ref_name }}
                expose:
                  - "80"
                environment:
                  - ASPNETCORE_ENVIRONMENT=${{ inputs.environment }}
                  - ConnectionStrings__DefaultConnection=${{ secrets.DB_CONNECTION_STRING }}
                networks:
                  - microservices-network

            networks:
              microservices-network:
                driver: bridge
                internal: false
            EOL

            # Deploy the services
            docker-compose down
            docker-compose pull
            docker-compose up -d 