#!/usr/bin/expect -f

set timeout 30
set host "159.223.68.114"
set user "root"
set password "pHuong@123dotnet"

spawn ssh $user@$host

expect {
    "yes/no" { 
        send "yes\r"
        expect "*password*" { send "$password\r" }
    }
    "*password*" { 
        send "$password\r" 
    }
}

expect "# "

# Run debug commands
send "echo '=== CONTAINER STATUS ==='\r"
expect "# "

send "docker ps -a --format \"table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\"\r"
expect "# "

send "echo '=== DEPLOYMENT DIRECTORY ==='\r"
expect "# "

send "ls -la /deployments/\r"
expect "# "

send "echo '=== MICROSERVICES DIRECTORY ==='\r"
expect "# "

send "ls -la /deployments/microservices/ 2>/dev/null || echo 'Directory not found'\r"
expect "# "

send "echo '=== DOCKER COMPOSE STATUS ==='\r"
expect "# "

send "cd /deployments/microservices 2>/dev/null && docker-compose ps 2>/dev/null || echo 'Cannot get compose status'\r"
expect "# "

send "echo '=== CONTAINER LOGS ==='\r"
expect "# "

send "docker logs auth-service --tail=10 2>/dev/null || echo 'Auth service not found'\r"
expect "# "

send "docker logs email-service --tail=10 2>/dev/null || echo 'Email service not found'\r"
expect "# "

send "docker logs gateway-api --tail=10 2>/dev/null || echo 'Gateway API not found'\r"
expect "# "

send "docker logs kafka-microservices --tail=10 2>/dev/null || echo 'Kafka not found'\r"
expect "# "

send "echo '=== NETWORK TESTS ==='\r"
expect "# "

send "curl -f http://localhost:5000/health 2>/dev/null && echo 'Gateway: OK' || echo 'Gateway: FAILED'\r"
expect "# "

send "curl -f http://localhost:5001/health 2>/dev/null && echo 'Auth: OK' || echo 'Auth: FAILED'\r"
expect "# "

send "curl -f http://localhost:5002/health 2>/dev/null && echo 'Email: OK' || echo 'Email: FAILED'\r"
expect "# "

send "echo '=== LISTENING PORTS ==='\r"
expect "# "

send "netstat -tlnp | grep -E ':(5000|5001|5002|1433|9092)' || echo 'No services listening'\r"
expect "# "

send "echo '=== DOCKER IMAGES ==='\r"
expect "# "

send "docker images --format \"table {{.Repository}}\\t{{.Tag}}\\t{{.Size}}\" | head -10\r"
expect "# "

send "echo '=== DONE ==='\r"
expect "# "

send "exit\r"
expect eof 