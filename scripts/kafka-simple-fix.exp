#!/usr/bin/expect -f

set timeout 60
set host "159.223.68.114"
set user "root"
set password "pHuong@123dotnet"

spawn ssh $user@$host

expect {
    "yes/no" { 
        send "yes\r"
        expect "*password*" { send "$password\r" }
    }
    "*password*" { 
        send "$password\r" 
    }
}

expect "# "

send "echo '=== KAFKA SIMPLE FIX ==='\r"
expect "# "

send "docker stop kafka-microservices 2>/dev/null || echo 'Kafka stopped'\r"
expect "# "

send "docker rm kafka-microservices 2>/dev/null || echo 'Kafka removed'\r"
expect "# "

send "echo 'Starting Kafka with simple config (no volume mount)...'\r"
expect "# "

send "docker run -d --name kafka-microservices --network microservices-network -p 9092:9092 -e KAFKA_NODE_ID=1 -e KAFKA_PROCESS_ROLES=broker,controller -e KAFKA_CONTROLLER_QUORUM_VOTERS=1@localhost:29093 -e KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:29093 -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-microservices:9092 -e KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 -e KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1 -e KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1 -e KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0 -e CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk --restart unless-stopped confluentinc/cp-kafka:latest\r"
expect "# "

send "echo 'Waiting 45 seconds for Kafka startup...'\r"
expect "# "

send "sleep 45\r"
expect "# "

send "echo 'Checking Kafka container status:'\r"
expect "# "

send "docker ps | grep kafka\r"
expect "# "

send "echo 'Testing Kafka with topics list:'\r"
expect "# "

send "docker exec kafka-microservices kafka-topics --list --bootstrap-server localhost:9092 2>/dev/null || echo 'Kafka not ready yet'\r"
expect "# "

send "echo 'Creating topic:'\r"
expect "# "

send "docker exec kafka-microservices kafka-topics --create --topic user-registered --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --if-not-exists 2>/dev/null || echo 'Topic creation failed'\r"
expect "# "

send "echo 'Verifying topic exists:'\r"
expect "# "

send "docker exec kafka-microservices kafka-topics --list --bootstrap-server localhost:9092 2>/dev/null | grep user-registered || echo 'Topic not found'\r"
expect "# "

send "echo 'Restarting microservices:'\r"
expect "# "

send "docker restart auth-service email-service\r"
expect "# "

send "sleep 20\r"
expect "# "

send "echo 'Testing services:'\r"
expect "# "

send "curl -s http://localhost:5001/health && echo ' - Auth OK'\r"
expect "# "

send "curl -s http://localhost:5002/health && echo ' - Email OK'\r"
expect "# "

send "curl -s http://localhost:5000/health && echo ' - Gateway OK'\r"
expect "# "

send "echo 'Checking auth service logs for Kafka:'\r"
expect "# "

send "docker logs auth-service --tail=15 | grep -E '(Kafka|Connected|Exception|ERROR)' || echo 'No Kafka errors in auth service'\r"
expect "# "

send "echo 'KAFKA SIMPLE FIX COMPLETE!'\r"
expect "# "

send "exit\r"
expect eof 