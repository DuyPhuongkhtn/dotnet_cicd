#!/usr/bin/expect -f

set timeout 60
set host "159.223.68.114"
set user "root"
set password "pHuong@123dotnet"

spawn ssh $user@$host

expect {
    "yes/no" { 
        send "yes\r"
        expect "*password*" { send "$password\r" }
    }
    "*password*" { 
        send "$password\r" 
    }
}

expect "# "

send "echo '=== MANUAL CONTAINER STARTUP ==='\r"
expect "# "

send "echo 'Creating network...'\r"
expect "# "

send "docker network create microservices-network 2>/dev/null || echo 'Network exists'\r"
expect "# "

send "echo 'Stopping existing containers...'\r"
expect "# "

send "docker stop kafka-microservices auth-service email-service gateway-api 2>/dev/null || true\r"
expect "# "

send "docker rm kafka-microservices auth-service email-service gateway-api 2>/dev/null || true\r"
expect "# "

send "echo 'Starting Kafka...'\r"
expect "# "

send "docker run -d --name kafka-microservices --network microservices-network -p 9092:9092 -e KAFKA_NODE_ID=1 -e KAFKA_PROCESS_ROLES=broker,controller -e KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-microservices:29093 -e KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER -e KAFKA_LISTENERS=PLAINTEXT://kafka-microservices:9092,CONTROLLER://kafka-microservices:29093 -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-microservices:9092 -e KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 -e KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1 -e KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1 -e KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0 -e KAFKA_NUM_PARTITIONS=3 --restart unless-stopped confluentinc/cp-kafka:latest\r"
expect "# "

send "echo 'Waiting for Kafka to start...'\r"
expect "# "

send "sleep 20\r"
expect "# "

send "echo 'Starting Auth Service...'\r"
expect "# "

send "docker run -d --name auth-service --network microservices-network -p 5001:80 -e ASPNETCORE_ENVIRONMENT=Production -e ENABLE_SWAGGER=true -e 'ConnectionStrings__DefaultConnection=Server=sqlserver-microservices,1433;Database=AuthDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true' -e Kafka__BootstrapServers=kafka-microservices:9092 --restart unless-stopped ghcr.io/duyphuongkhtn/dotnet_cicd/auth-service:latest\r"
expect "# "

send "echo 'Starting Email Service...'\r"
expect "# "

send "docker run -d --name email-service --network microservices-network -p 5002:80 -e ASPNETCORE_ENVIRONMENT=Production -e Kafka__BootstrapServers=kafka-microservices:9092 --restart unless-stopped ghcr.io/duyphuongkhtn/dotnet_cicd/email-service:latest\r"
expect "# "

send "echo 'Starting Gateway API...'\r"
expect "# "

send "docker run -d --name gateway-api --network microservices-network -p 5000:80 -e ASPNETCORE_ENVIRONMENT=Production -e Services__AuthService=http://auth-service:80 -e Services__EmailService=http://email-service:80 --restart unless-stopped ghcr.io/duyphuongkhtn/dotnet_cicd/gateway-api:latest\r"
expect "# "

send "echo 'Waiting for services to start...'\r"
expect "# "

send "sleep 30\r"
expect "# "

send "docker ps --format \"table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\"\r"
expect "# "

send "echo 'Testing health endpoints:'\r"
expect "# "

send "curl -s http://localhost:5000/health && echo ' - Gateway: OK' || echo ' - Gateway: FAILED'\r"
expect "# "

send "curl -s http://localhost:5001/health && echo ' - Auth: OK' || echo ' - Auth: FAILED'\r"
expect "# "

send "curl -s http://localhost:5002/health && echo ' - Email: OK' || echo ' - Email: FAILED'\r"
expect "# "

send "echo 'Container logs:'\r"
expect "# "

send "docker logs auth-service --tail=5 2>/dev/null || echo 'Auth logs not available'\r"
expect "# "

send "docker logs email-service --tail=5 2>/dev/null || echo 'Email logs not available'\r"
expect "# "

send "docker logs gateway-api --tail=5 2>/dev/null || echo 'Gateway logs not available'\r"
expect "# "

send "echo 'MANUAL DEPLOYMENT COMPLETE!'\r"
expect "# "

send "exit\r"
expect eof 