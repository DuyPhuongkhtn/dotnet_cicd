#!/usr/bin/expect -f

set timeout 120
set host "159.223.68.114"
set user "root"
set password "pHuong@123dotnet"

spawn ssh $user@$host

expect {
    "yes/no" { 
        send "yes\r"
        expect "*password*" { send "$password\r" }
    }
    "*password*" { 
        send "$password\r" 
    }
}

expect "# "

send "echo '=== KAFKA COMPLETE FIX ==='\r"
expect "# "

send "echo 'Stopping broken Kafka...'\r"
expect "# "

send "docker stop kafka-microservices 2>/dev/null || echo 'Kafka not running'\r"
expect "# "

send "docker rm kafka-microservices 2>/dev/null || echo 'Kafka container removed'\r"
expect "# "

send "echo 'Creating Kafka data directory...'\r"
expect "# "

send "mkdir -p /tmp/kafka-data && chmod 777 /tmp/kafka-data\r"
expect "# "

send "echo 'Starting Kafka with proper configuration...'\r"
expect "# "

send "docker run -d --name kafka-microservices --network microservices-network -p 9092:9092 -v /tmp/kafka-data:/var/lib/kafka/data -e KAFKA_NODE_ID=1 -e KAFKA_PROCESS_ROLES=broker,controller -e KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-microservices:29093 -e KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:29093 -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-microservices:9092 -e KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 -e KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1 -e KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1 -e KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0 -e KAFKA_AUTO_CREATE_TOPICS_ENABLE=true -e CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk --restart unless-stopped confluentinc/cp-kafka:latest\r"
expect "# "

send "echo 'Waiting for Kafka to fully start (60 seconds)...'\r"
expect "# "

send "sleep 60\r"
expect "# "

send "echo 'Checking Kafka status:'\r"
expect "# "

send "docker logs kafka-microservices --tail=10\r"
expect "# "

send "echo 'Testing Kafka connectivity:'\r"
expect "# "

send "docker exec kafka-microservices kafka-topics --list --bootstrap-server localhost:9092 || echo 'Kafka not ready'\r"
expect "# "

send "echo 'Creating user-registered topic:'\r"
expect "# "

send "docker exec kafka-microservices kafka-topics --create --topic user-registered --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --if-not-exists\r"
expect "# "

send "echo 'Verifying topics:'\r"
expect "# "

send "docker exec kafka-microservices kafka-topics --list --bootstrap-server localhost:9092\r"
expect "# "

send "echo 'Testing topic operations:'\r"
expect "# "

send "docker exec kafka-microservices kafka-console-producer --topic user-registered --bootstrap-server localhost:9092 --timeout-ms 5000 <<< 'test message'\r"
expect "# "

send "echo 'Restarting all microservices:'\r"
expect "# "

send "docker restart auth-service email-service gateway-api\r"
expect "# "

send "sleep 30\r"
expect "# "

send "echo 'Final connectivity tests:'\r"
expect "# "

send "curl -s http://localhost:5001/health && echo ' - Auth Health OK'\r"
expect "# "

send "curl -s http://localhost:5002/health && echo ' - Email Health OK'\r"
expect "# "

send "curl -s http://localhost:5000/health && echo ' - Gateway Health OK'\r"
expect "# "

send "echo 'Checking Kafka logs in auth service:'\r"
expect "# "

send "docker logs auth-service --tail=20 | grep -E '(Kafka|Connected|Exception|ERROR)' || echo 'No Kafka connection issues'\r"
expect "# "

send "echo 'Network connectivity check:'\r"
expect "# "

send "docker exec auth-service nslookup kafka-microservices || echo 'DNS resolution failed'\r"
expect "# "

send "echo 'KAFKA COMPLETE FIX DONE!'\r"
expect "# "

send "exit\r"
expect eof 