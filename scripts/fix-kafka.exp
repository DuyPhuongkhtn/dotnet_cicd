#!/usr/bin/expect -f

set timeout 60
set host "159.223.68.114"
set user "root"
set password "pHuong@123dotnet"

spawn ssh $user@$host

expect {
    "yes/no" { 
        send "yes\r"
        expect "*password*" { send "$password\r" }
    }
    "*password*" { 
        send "$password\r" 
    }
}

expect "# "

send "echo '=== KAFKA NETWORK FIX ==='\r"
expect "# "

send "echo 'Current containers:'\r"
expect "# "

send "docker ps --format 'table {{.Names}}\\t{{.Status}}\\t{{.Ports}}'\r"
expect "# "

send "echo 'Ensuring network exists:'\r"
expect "# "

send "docker network create microservices-network 2>/dev/null || echo 'Network exists'\r"
expect "# "

send "echo 'Adding all containers to network:'\r"
expect "# "

send "docker network connect microservices-network sqlserver-microservices 2>/dev/null || echo 'SQL already connected'\r"
expect "# "

send "docker network connect microservices-network kafka-microservices 2>/dev/null || echo 'Kafka already connected'\r"
expect "# "

send "docker network connect microservices-network auth-service 2>/dev/null || echo 'Auth already connected'\r"
expect "# "

send "docker network connect microservices-network email-service 2>/dev/null || echo 'Email already connected'\r"
expect "# "

send "docker network connect microservices-network gateway-api 2>/dev/null || echo 'Gateway already connected'\r"
expect "# "

send "echo 'Checking Kafka status:'\r"
expect "# "

send "docker logs kafka-microservices --tail=5 | grep -E '(started|ready|ERROR)' || echo 'Kafka logs unavailable'\r"
expect "# "

send "echo 'Waiting for Kafka to be ready...'\r"
expect "# "

send "sleep 10\r"
expect "# "

send "echo 'Checking existing topics:'\r"
expect "# "

send "docker exec kafka-microservices kafka-topics --list --bootstrap-server localhost:9092 2>/dev/null || echo 'Cannot list topics'\r"
expect "# "

send "echo 'Creating topic if not exists:'\r"
expect "# "

send "docker exec kafka-microservices kafka-topics --create --topic user-registered --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --if-not-exists 2>/dev/null || echo 'Topic creation failed'\r"
expect "# "

send "echo 'Verifying topic created:'\r"
expect "# "

send "docker exec kafka-microservices kafka-topics --list --bootstrap-server localhost:9092 | grep user-registered || echo 'Topic not found'\r"
expect "# "

send "echo 'Restarting microservices for network refresh:'\r"
expect "# "

send "docker restart auth-service email-service gateway-api\r"
expect "# "

send "sleep 15\r"
expect "# "

send "echo 'Testing connectivity:'\r"
expect "# "

send "curl -s http://localhost:5001/health && echo ' - Health OK'\r"
expect "# "

send "curl -s http://localhost:5001/api/auth/ping && echo ' - API OK'\r"
expect "# "

send "curl -s http://localhost:5001/swagger/v1/swagger.json | head -1 && echo ' - Swagger OK'\r"
expect "# "

send "echo 'Checking Kafka connectivity in logs:'\r"
expect "# "

send "docker logs auth-service --tail=10 | grep -E '(Kafka|ERROR|Exception)' || echo 'No recent Kafka errors'\r"
expect "# "

send "echo 'Network inspection:'\r"
expect "# "

send "docker network inspect microservices-network | grep -A3 '\"Name\"' | head -20\r"
expect "# "

send "echo 'KAFKA NETWORK FIX COMPLETE!'\r"
expect "# "

send "exit\r"
expect eof 